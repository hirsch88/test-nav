var __extends=this&&this.__extends||function(){var t=function(e,n){t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n))t[n]=e[n]};return t(e,n)};return function(e,n){if(typeof n!=="function"&&n!==null)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");t(e,n);function i(){this.constructor=e}e.prototype=n===null?Object.create(n):(i.prototype=n.prototype,new i)}}();var __assign=this&&this.__assign||function(){__assign=Object.assign||function(t){for(var e,n=1,i=arguments.length;n<i;n++){e=arguments[n];for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r))t[r]=e[r]}return t};return __assign.apply(this,arguments)};System.register([],(function(t){"use strict";return{execute:function(){t({Direction:void 0,GestureState:void 0,PointerListenerState:void 0,PointerManagerState:void 0,PointerState:void 0});var e;(function(t){t["None"]="0";t["Left"]="left";t["Right"]="right";t["Up"]="up";t["Down"]="down"})(e||(e=t("Direction",{})));var n=t("Directions",Object.freeze({Horizontal:[e.Left,e.Right],Vertical:[e.Up,e.Down],All:[e.Left,e.Right,e.Up,e.Down,e.None]}));var i;(function(t){t["Inactive"]="inactive";t["Active"]="active";t["Blocked"]="blocked"})(i||(i=t("GestureState",{})));var r;(function(t){t["NoPointer"]="nopointer";t["SinglePointer"]="singlepointer";t["DualPointer"]="dualpointer"})(r||(r=t("PointerManagerState",{})));var o;(function(t){t["NoActiveGesture"]="noactivegesture";t["ActiveGesture"]="activegesture"})(o||(o=t("PointerListenerState",{})));var a=function(){function t(t,e){this.x=t;this.y=e}return t}();var s=function(){function t(t,n){this.startPoint=t;this.endPoint=n;this.direction=e.None;this.deltaX=this.endPoint.x-this.startPoint.x;this.deltaY=this.endPoint.y-this.startPoint.y;this.x=this.deltaX;this.y=this.deltaY;this.vectorLength=Math.sqrt(Math.pow(this.deltaX,2)+Math.pow(this.deltaY,2));if(Math.abs(this.deltaX)>Math.abs(this.deltaY)){if(this.startPoint.x<this.endPoint.x)this.direction=e.Right;else if(this.startPoint.x>this.endPoint.x)this.direction=e.Left}else{if(this.startPoint.y<this.endPoint.y)this.direction=e.Down;else if(this.startPoint.y>this.endPoint.y)this.direction=e.Up}}return t}();var l=function(){function t(){}t.getVector=function(t,e){var n=new a(t.clientX,t.clientY);var i=new a(e.clientX,e.clientY);var r=new s(n,i);return r};t.getSpeed=function(t,e,n){var i=0;var r=n-e;var o=r/1e3;if(t!=null&&o!=0)i=t.vectorLength/o;return i};t.calculateRotationAngle=function(t,e){var n=new s(t.startPoint,e.startPoint);var i=new s(t.endPoint,e.endPoint);var r=new a(0,0);var o=new s(n.startPoint,r);var l=this.translatePoint(n.endPoint,o);var c=new s(i.startPoint,r);var u=this.translatePoint(i.endPoint,c);var v=this.calcAngleRad(l)*-1;var p=u.x*Math.cos(v)-u.y*Math.sin(v);var h=Math.round(u.x*Math.sin(v)+u.y*Math.cos(v));var d=Math.atan2(h,p)*180/Math.PI;return d};t.calculateVectorAngle=function(t,e){var n=0;if(t.vectorLength>0&&e.vectorLength>0){var i=(t.x*e.x+t.y*e.y)/(t.vectorLength*e.vectorLength);var r=Math.acos(i);n=this.rad2deg(r)}return n};t.translatePoint=function(t,e){var n=t.x+e.x;var i=t.y+e.y;var r=new a(n,i);return r};t.calcAngleDegrees=function(t){var e=Math.atan2(t.y,t.x)*180/Math.PI;if(e<0)e=360+e;return e};t.calcAngleRad=function(t){var e=Math.atan2(t.y,t.x);if(e<0)e=2*Math.PI+e;return e};t.deg2rad=function(t){var e=Math.PI/180*t;return e};t.rad2deg=function(t){var e=t/(Math.PI/180);return e};t.getCenter=function(t,e){var n=(t.x+e.x)/2;var i=(t.y+e.y)/2;var r=new a(n,i);return r};t.getCenterMovementVector=function(t,e){var n=this.getCenter(t.startPoint,e.startPoint);var i=this.getCenter(t.endPoint,e.endPoint);var r=new s(n,i);return r};t.calculateDistanceChange=function(t,e){var n=new s(t.startPoint,e.startPoint);var i=new s(t.endPoint,e.endPoint);var r=i.vectorLength-n.vectorLength;return r};t.calculateAbsoluteDistanceChange=function(t,e){var n=this.calculateDistanceChange(t,e);var i=Math.abs(n);return i};t.calculateRelativeDistanceChange=function(t,e){var n=new s(t.startPoint,e.startPoint);var i=new s(t.endPoint,e.endPoint);var r=i.vectorLength/n.vectorLength;return r};return t}();t("Geometry",l);var c;(function(t){t["Active"]="active";t["Removed"]="removed";t["Canceled"]="canceled"})(c||(c=t("PointerState",{})));var u=function(){function t(t,e){var n;this.options=__assign({DEBUG:false},e);this.DEBUG=this.options.DEBUG;var i=(new Date).getTime();this.pointerId=t.pointerId;this.vectorTimespan=(n=this.options.vectorTimespan)!==null&&n!==void 0?n:100;this.initialPointerEvent=t;this.currentPointerEvent=t;this.recognizedEvents=[t];this.state=c.Active;var r=l.getVector(t,t);var o={startX:this.initialPointerEvent.clientX,startY:this.initialPointerEvent.clientY,vector:r,deltaX:0,deltaY:0,startTimestampUTC:i,startTimestamp:this.initialPointerEvent.timeStamp,currentTimestamp:this.initialPointerEvent.timeStamp,endTimestamp:null,maximumSpeed:0,currentSpeed:0,distance:0,maximumDistance:0,averageSpeed:0,finalSpeed:0,traveledDistance:0,hasBeenMoved:false,duration:0};var a={duration:0,speed:0,vector:r,distance:0,isMoving:false};var s={global:o,live:a};this.parameters=s}t.prototype.getTarget=function(){return this.initialPointerEvent.target};t.prototype.reset=function(){};t.prototype.onIdle=function(){var t=(new Date).getTime();var e=t-this.parameters.global.startTimestampUTC;this.parameters.global.duration=e};t.prototype.onPointerMove=function(t){this.parameters.global.hasBeenMoved=true;this.parameters.live.isMoving=true;this.update(t)};t.prototype.onPointerUp=function(t){this.parameters.global.finalSpeed=this.parameters.live.speed;this.parameters.live.speed=0;this.parameters.live.isMoving=false;this.state=c.Removed;this.parameters.global.endTimestamp=t.timeStamp;this.update(t);if(this.DEBUG===true)console.log("[PointerInput] pointerdown ended. pointerdown duration: ".concat(this.parameters.global.duration,"ms"))};t.prototype.onPointerLeave=function(t){this.onPointerUp(t)};t.prototype.onPointerCancel=function(t){this.update(t);this.parameters.live.speed=0;this.state=c.Canceled;this.parameters.live.isMoving=false;this.parameters.global.endTimestamp=t.timeStamp;if(this.DEBUG===true)console.log("[PointerInput] canceled, pointerdown duration:".concat(this.parameters.global.duration,"ms"))};t.prototype.update=function(t){this.currentPointerEvent=t;this.recognizedEvents.push(t);var e=this.getTimedPointerEvents();var n=l.getVector(e[0],e[1]);this.parameters.live.vector=n;this.parameters.live.distance=n.vectorLength;this.parameters.live.speed=l.getSpeed(n,e[0].timeStamp,e[1].timeStamp);if(this.parameters.live.speed>this.parameters.global.maximumSpeed)this.parameters.global.maximumSpeed=this.parameters.live.speed;this.parameters.global.currentTimestamp=t.timeStamp;this.parameters.global.duration=t.timeStamp-this.parameters.global.startTimestamp;this.parameters.global.deltaX=n.endPoint.x-this.parameters.global.startX;this.parameters.global.deltaY=n.endPoint.y-this.parameters.global.startY;var i=l.getVector(this.initialPointerEvent,this.currentPointerEvent);this.parameters.global.vector=i;this.parameters.global.distance=i.vectorLength;if(i.vectorLength>this.parameters.global.maximumDistance)this.parameters.global.maximumDistance=i.vectorLength;if(this.DEBUG===true){console.log("[PointerInput] current speed: ".concat(this.parameters.live.speed,"px/s"));console.log("[PointerInput] pointerdown duration: ".concat(this.parameters.global.duration,"ms"));console.log("[PointerInput] live vector length within vectorTimespan: ".concat(this.parameters.live.vector.vectorLength,"px"))}};t.prototype.getTimedPointerEvents=function(){var t=this.initialPointerEvent;var e=this.recognizedEvents[this.recognizedEvents.length-1];var n=this.recognizedEvents.length-1;var i=0;var r=e.timeStamp;while(i<this.vectorTimespan){n=n-1;if(n<0)break;t=this.recognizedEvents[n];i=r-t.timeStamp}var o=[t,e];this.recognizedEvents=this.recognizedEvents.slice(-20);return o};return t}();var v=function(){function t(t){this.pointer=t;this.parameters=t.parameters}t.prototype.getTarget=function(){return this.pointer.initialPointerEvent.target};t.prototype.getCurrentPointerEvent=function(){return this.pointer.currentPointerEvent};t.prototype.getCurrentDirection=function(){return this.parameters.live.vector.direction};t.prototype.onIdle=function(){};t.prototype.onPointerMove=function(t){};t.prototype.onPointerUp=function(t){};t.prototype.onPointerLeave=function(t){};t.prototype.onPointerCancel=function(t){};return t}();var p=globalThis["window"];var h;if(p===null||p===void 0?void 0:p.CustomEvent)h=p.CustomEvent;else h=function(t){__extends(e,t);function e(e,n){var i=t.call(this,e,n)||this;i.detail=n===null||n===void 0?void 0:n.detail;return i}e.prototype.initCustomEvent=function(){throw new Error("Unsupported deprecated method")};return e}(Event);var d=function(t){__extends(e,t);function e(){return t!==null&&t.apply(this,arguments)||this}return e}(h);t("GestureEvent",d);var f=function(){function t(t,e){this.state=i.Inactive;this.validPointerManagerState=null;this.validPointerInputConstructor=v;this.domElement=t;this.initialPointerEvent=null;this.initialParameters=null;this.activeStateParameters=null;this.options=__assign({bubbles:true,blocks:[],supportedDirections:[],supportedButtons:[],DEBUG:false},e);this.DEBUG=this.options.DEBUG}t.prototype.getEmptyGestureParameters=function(){var t={global:{min:{},max:{},boolean:{}},live:{min:{},max:{},boolean:{}}};return t};t.prototype.getGestureParameters=function(){var t;if(this.state==i.Active){t=this.activeStateParameters;if(this.DEBUG==true){console.log("[".concat(this.eventBaseName,"] validating using activeStateParameters"));console.log(t)}}else{if(this.DEBUG==true)console.log("[".concat(this.eventBaseName,"] validating using initialParameters"));t=this.initialParameters}if(t==null)throw new Error("[Gesture] no gesture parameters found. Do not call .getGestureParameters on abstract class Gesture");return t};t.prototype.validateGestureParameters=function(t){var e=this.getGestureParameters();var n=true;var i;for(i in e){var r=e[i];var o=t.parameters[i];var a=void 0;for(a in r){var s=r[a];var l=void 0;for(l in s){var c=s[l];var u=o[l];if(this.DEBUG==true)console.log("[".concat(this.eventBaseName,"] validating ").concat(i," ").concat(a,": required: ").concat(c,", pointer: ").concat(u));if(typeof c=="boolean"&&typeof u=="boolean")n=this.validateBooleanParameter(c,u);else if(typeof c=="number"&&typeof u=="number")n=this.validateMinMaxParameter(c,u,a);if(n==false){if(this.DEBUG==true)console.log("[".concat(this.eventBaseName,"] invalidated "));return false}}}}return true};t.prototype.validateBooleanParameter=function(t,e){if(t==null)return true;else if(t==e){if(this.DEBUG==true)console.log("validated: required value: ".concat(t,", current value: ").concat(e));return true}if(this.DEBUG==true)console.log("dismissing ".concat(this.eventBaseName,": required value: ").concat(t,", current value: ").concat(e));return false};t.prototype.validateMinMaxParameter=function(t,e,n){if(n=="min"){if(e>=t)return true}else if(n=="max"){if(e<=t)return true}return false};t.prototype.validateDirection=function(t){var e=t.getCurrentDirection();if(this.options.supportedDirections.length&&!this.options.supportedDirections.includes(e)){if(this.DEBUG==true)console.log("[Gestures] dismissing ".concat(this.eventBaseName,": supported directions: ").concat(this.options.supportedDirections,", current direction: ").concat(e));return false}return true};t.prototype.validateGestureState=function(){if(this.state==i.Blocked)return false;return true};t.prototype.validatePointerManagerState=function(t){if(t.state==this.validPointerManagerState)return true;if(this.DEBUG==true)console.log("[Gesture] PointerManagerState invalidated ".concat(this.eventBaseName,": ").concat(t.state));return false};t.prototype.validatePointerInputConstructor=function(t){if(t instanceof this.validPointerInputConstructor)return true;if(this.DEBUG==true)console.log("[Gesture] PointerInputConstructor invalidated ".concat(this.eventBaseName,": ").concat(this.validPointerInputConstructor));return false};t.prototype.validate=function(t){var e=this.validateGestureState();if(e==true)e=this.validatePointerManagerState(t);var n=t.activePointerInput;if(e==true&&n!=null){e=this.validatePointerInputConstructor(n);if(e==true)e=this.validateDirection(n);if(e==true)e=this.validateGestureParameters(n)}return e};t.prototype.recognize=function(t){var e=this.validate(t);if(e==true&&this.state==i.Inactive)this.onStart(t);if(e==true&&this.state==i.Active){if(this.initialPointerEvent==null)this.setInitialPointerEvent(t);this.emit(t)}else if(this.state==i.Active&&e==false)this.onEnd(t);else if(this.DEBUG==true)console.log("not firing event ".concat(this.eventBaseName,". No SinglePointerInput found"))};t.prototype.getPointerInput=function(t){if(t.hasPointersOnSurface()==true&&t.activePointerInput instanceof this.validPointerInputConstructor)return t.activePointerInput;else if(t.lastRemovedPointer instanceof u){var e=t.getlastRemovedPointerInput();if(e instanceof this.validPointerInputConstructor)return e}return null};t.prototype.setInitialPointerEvent=function(t){var e=this.getPointerInput(t);if(e instanceof this.validPointerInputConstructor){var n=e.getCurrentPointerEvent();this.initialPointerEvent=n}};t.prototype.emit=function(t,n){n=n||this.eventBaseName;if(this.DEBUG===true)console.log("[Gestures] detected and firing event ".concat(n));var i=this.getPointerInput(t);if(i!=null){var r=i.getTarget();if(r instanceof EventTarget){var o=this.getEventData(i,t);var a={detail:o,bubbles:this.options.bubbles};if(this.DEBUG===true)console.log(a);var s=new d(n,a);if(a.bubbles==true)r.dispatchEvent(s);else this.domElement.dispatchEvent(s);var l=o.live.direction;var c=!!this.options.supportedDirections;if(c==true&&l!=e.None&&(n==this.eventBaseName||n=="swipe"))for(var u=0;u<this.options.supportedDirections.length;u++){var v=this.options.supportedDirections[u];if(v==l){var p=n+v;if(this.DEBUG==true)console.log("[Gestures] detected and firing event ".concat(p));var h=new d(p,a);if(a.bubbles==true)r.dispatchEvent(h);else this.domElement.dispatchEvent(h)}}}}};t.prototype.onStart=function(t){this.blockGestures();this.state=i.Active;this.setInitialPointerEvent(t);var e="".concat(this.eventBaseName,"start");this.emit(t,e)};t.prototype.onEnd=function(t){this.unblockGestures();if(this.DEBUG==true)console.log("[".concat(this.eventBaseName,"] ended. Setting ").concat(this.eventBaseName,".state = ").concat(i.Inactive));this.state=i.Inactive;var e="".concat(this.eventBaseName,"end");this.emit(t,e)};t.prototype.onTouchStart=function(t){};t.prototype.onTouchMove=function(t){};t.prototype.onTouchEnd=function(t){};t.prototype.onTouchCancel=function(t){};t.prototype.block=function(t){if(this.options.blocks.indexOf(t)==-1)this.options.blocks.push(t)};t.prototype.unblock=function(t){if(this.options.blocks.indexOf(t)!=-1)this.options.blocks.splice(this.options.blocks.indexOf(t),1)};t.prototype.blockGestures=function(){for(var t=0;t<this.options.blocks.length;t++){var e=this.options.blocks[t];if(e.state==i.Inactive){if(this.DEBUG==false)console.log("[Gesture] blocking ".concat(e.eventBaseName));e.state=i.Blocked}}};t.prototype.unblockGestures=function(){for(var t=0;t<this.options.blocks.length;t++){var e=this.options.blocks[t];e.state=i.Inactive}};t.prototype.getEventData=function(t,e){throw new Error("Gesture subclasses require a getEventData method()")};return t}();var g=function(t){__extends(e,t);function e(e,n){var i=t.call(this,e,n)||this;i.initialPointerEvent=null;i.validPointerManagerState=r.SinglePointer;var o=i.getEmptyGestureParameters();i.initialParameters=__assign({},o);i.activeStateParameters=JSON.parse(JSON.stringify(__assign({},o)));return i}e.prototype.getEventData=function(t,e){var n=t.parameters.live;var i=t.parameters.live;var r=n.vector;var o=n.duration;if(this.initialPointerEvent!=null){var l=new a(this.initialPointerEvent.clientX,this.initialPointerEvent.clientY);var c=new a(t.pointer.currentPointerEvent.clientX,t.pointer.currentPointerEvent.clientY);r=new s(l,c);o=t.pointer.currentPointerEvent.timeStamp-this.initialPointerEvent.timeStamp}var u={deltaX:r.x,deltaY:r.y,distance:r.vectorLength,speedX:r.x/o,speedY:r.y/o,speed:r.vectorLength/o,direction:r.direction,scale:1,rotation:0,center:{x:n.vector.endPoint.x,y:n.vector.endPoint.y},srcEvent:t.pointer.currentPointerEvent};var v={deltaX:i.vector.x,deltaY:i.vector.y,distance:i.vector.vectorLength,speedX:i.vector.x/t.pointer.vectorTimespan,speedY:i.vector.y/t.pointer.vectorTimespan,speed:i.speed,direction:i.vector.direction,scale:1,rotation:0,center:{x:i.vector.endPoint.x,y:i.vector.endPoint.y},srcEvent:t.pointer.currentPointerEvent};var p={recognizer:this,global:u,live:v,pointerManager:e};return p};e.prototype.validateButton=function(t){if(this.options.supportedButtons.length>0){var e=t.activePointerInput;var n=t.lastRemovedPointer;var i=null;if(e!=null)i=e.getCurrentPointerEvent();else if(n!=null)i=n.currentPointerEvent;if(i!=null&&i.pointerType=="mouse"&&this.options.supportedButtons.indexOf(i.buttons)==-1){if(this.DEBUG==true)console.log("dismissing ".concat(this.eventBaseName,": supportedButtons: ").concat(this.options.supportedButtons.toString(),", poinerEvent.buttons: ").concat(i.buttons));return false}}return true};e.prototype.validate=function(e){var n=this.validateButton(e);if(n==true)n=t.prototype.validate.call(this,e);return n};return e}(f);var m=function(t){__extends(e,t);function e(e,n){var i=t.call(this,e,n)||this;i.validPointerManagerState=r.NoPointer;i.eventBaseName="tap";var o=200;var a=30;var s=30;if(n){if("maxDuration"in n)o=n["maxDuration"];if("maxDistance"in n){a=n["maxDistance"];s=n["maxDistance"]}}i.initialParameters.global.max["duration"]=o;i.initialParameters.live.max["distance"]=a;i.initialParameters.global.max["distance"]=s;return i}e.prototype.validateButton=function(t){if(this.options.supportedButtons.length>0){var e=t.lastRemovedPointer;if(e!=null){var n=e.currentPointerEvent;if(n.pointerType=="mouse"&&this.options.supportedButtons.indexOf(n.button)==-1){if(this.DEBUG==true)console.log("dismissing ".concat(this.eventBaseName,": supportedButtons: ").concat(this.options.supportedButtons.toString(),", poinerEvent.button: ").concat(n.button));return false}}}return true};e.prototype.validate=function(t){var e=this.validateGestureState();if(e==true)e=this.validatePointerManagerState(t);if(e==true)e=this.validateButton(t);if(e===true){if(t.lastInputSessionPointerCount!=1)return false;else{var n=t.getlastRemovedPointerInput();if(n instanceof v)e=this.validateGestureParameters(n);else e=false}}return e};e.prototype.onStart=function(t){this.setInitialPointerEvent(t);this.emit(t)};return e}(g);t("Tap",m);var P=function(t){__extends(e,t);function e(e,n){var i=t.call(this,e,n)||this;i.eventBaseName="press";var r=600;var o=10;var a=20;if(n){if("minDuration"in n)r=n["minDuration"];if("maxDistance"in n){a=n["maxDistance"];o=n["maxDistance"]}}i.initialParameters.global.min["duration"]=r;i.initialParameters.global.max["distance"]=o;i.initialParameters.global.max["maximumDistance"]=a;i.hasBeenEmitted=false;return i}e.prototype.recognize=function(t){var n=this.validate(t);var r=this.getPointerInput(t);var o=this.initialParameters.global.min["duration"]||e.minDuration;if(r instanceof v){if(n==true&&this.hasBeenEmitted==false){this.setInitialPointerEvent(t);this.emit(t);this.hasBeenEmitted=true;this.state=i.Active;this.blockGestures()}else if(n==false&&this.hasBeenEmitted==true){this.onEnd(t);this.state=i.Inactive;this.hasBeenEmitted=false}else{var a=r.parameters.global.duration;if(this.hasBeenEmitted==true&&a<=o)this.hasBeenEmitted=false}}if(r==null)this.hasBeenEmitted=false};e.minDuration=600;return e}(g);t("Press",P);var E=function(t){__extends(o,t);function o(e,i){var o=this;var a;o=t.call(this,e,i)||this;o.validPointerManagerState=r.SinglePointer;o.eventBaseName="pan";o.initialParameters.global.min["duration"]=0;o.initialParameters.live.min["distance"]=10;o.initialParameters.global.boolean["hasBeenMoved"]=true;o.swipeFinalSpeed=600;o.isSwipe=false;o.options.supportedDirections=(a=i===null||i===void 0?void 0:i.supportedDirections)!==null&&a!==void 0?a:n.All;o.initialSupportedDirections=o.options.supportedDirections;return o}o.prototype.validate=function(e){if(this.state==i.Active)this.options.supportedDirections=n.All;var r=t.prototype.validate.call(this,e);return r};o.prototype.onStart=function(e){this.isSwipe=false;t.prototype.onStart.call(this,e)};o.prototype.onEnd=function(n){var i=n.getlastRemovedPointerInput();if(i instanceof v){if(this.swipeFinalSpeed<i.parameters.global.finalSpeed&&i.parameters.live.vector.direction!=e.None){this.isSwipe=true;this.emit(n,"swipe")}else if(this.DEBUG==true){if(i.parameters.global.finalSpeed<this.swipeFinalSpeed)console.log("[Pan] dismissing swipe. Final speed: ".concat(i.parameters.global.finalSpeed," < ").concat(this.swipeFinalSpeed));else console.log("[Pan] dismissing swipe. Direction: ".concat(i.parameters.live.vector.direction))}}t.prototype.onEnd.call(this,n);this.options.supportedDirections=this.initialSupportedDirections};o.prototype.onTouchMove=function(t){if(this.state==i.Active){if(this.DEBUG==true)console.log("[Pan] preventing touchmove default");t.preventDefault();t.stopPropagation()}};return o}(g);t("Pan",E);var y=function(){function t(t,e){this.pointerIds=new Set([t.pointerId,e.pointerId]);this.startTimestamp=(new Date).getTime();this.pointerMap={};this.pointerMap[t.pointerId]=t;this.pointerMap[e.pointerId]=e;this.pointer_1=t;this.pointer_2=e;this.initialPointerEvent=t.initialPointerEvent;this.currentPointerEvent=t.initialPointerEvent;var n=this.pointer_1.parameters.global.vector;var i=this.pointer_2.parameters.global.vector;var r=l.getCenter(n.startPoint,i.startPoint);var o=l.getCenterMovementVector(n,i);var a={duration:0,center:r,centerHasBeenMoved:false,centerMovementDistance:0,centerMovementVector:o,absolutePointerDistanceChange:0,relativePointerDistanceChange:0,rotationAngle:0,absoluteRotationAngle:0,vectorAngle:0,absoluteVectorAngle:0};var s=this.pointer_1.parameters.live.vector;var c=this.pointer_2.parameters.live.vector;var u=l.getCenter(s.startPoint,c.startPoint);var v=l.getCenterMovementVector(s,c);var p={center:u,centerIsMoving:false,centerMovementDistance:0,centerMovementVector:v,absolutePointerDistanceChange:0,relativePointerDistanceChange:0,rotationAngle:0,absoluteRotationAngle:0,vectorAngle:0,absoluteVectorAngle:0};var h={global:a,live:p};this.parameters=h}t.prototype.removePointer=function(t){if(t==this.pointer_1.pointerId)return this.pointer_2;else if(t==this.pointer_2.pointerId)return this.pointer_1;else throw new Error("[DualPointerInput] cannot remove Pointer #".concat(t,". The pointer is not part of this DualPointerInput"))};t.prototype.getTarget=function(){return this.initialPointerEvent.target};t.prototype.update=function(t){if(t instanceof PointerEvent)this.currentPointerEvent=t;var e=(new Date).getTime();this.parameters.global["duration"]=e-this.startTimestamp;var n=this.pointer_1.parameters.global.vector;var i=this.pointer_2.parameters.global.vector;var r=l.getCenter(n.startPoint,i.startPoint);var o=l.getCenterMovementVector(n,i);var a=l.calculateAbsoluteDistanceChange(n,i);var s=l.calculateRelativeDistanceChange(n,i);var c=l.calculateRotationAngle(n,i);var u=l.calculateVectorAngle(n,i);this.parameters.global["center"]=r;this.parameters.global["centerMovementVector"]=o;this.parameters.global["centerMovementDistance"]=o.vectorLength;this.parameters.global["absolutePointerDistanceChange"]=a;this.parameters.global["relativePointerDistanceChange"]=s;this.parameters.global["rotationAngle"]=c;this.parameters.global["absoluteRotationAngle"]=Math.abs(c);this.parameters.global["vectorAngle"]=u;this.parameters.global["absoluteVectorAngle"]=Math.abs(u);var v=this.pointer_1.parameters.live.vector;var p=this.pointer_2.parameters.live.vector;var h=l.getCenter(v.startPoint,p.startPoint);var d=l.getCenterMovementVector(v,p);var f=l.calculateAbsoluteDistanceChange(v,p);var g=l.calculateRelativeDistanceChange(v,p);var m=l.calculateRotationAngle(v,p);var P=l.calculateVectorAngle(v,p);if(d.vectorLength>0){this.parameters.live.centerIsMoving=true;this.parameters.global.centerHasBeenMoved=true}else this.parameters.live.centerIsMoving=false;this.parameters.live["center"]=h;this.parameters.live["centerMovementDistance"]=d.vectorLength;this.parameters.live["centerMovementVector"]=d;this.parameters.live["absolutePointerDistanceChange"]=f;this.parameters.live["relativePointerDistanceChange"]=g;this.parameters.live["rotationAngle"]=m;this.parameters.live["absoluteRotationAngle"]=Math.abs(m);this.parameters.live["vectorAngle"]=P;this.parameters.live["absoluteVectorAngle"]=Math.abs(P)};t.prototype.onPointerMove=function(t){this.update(t)};t.prototype.onPointerUp=function(t){this.update(t)};t.prototype.onPointerLeave=function(t){this.update(t)};t.prototype.onPointerCancel=function(t){this.update(t)};t.prototype.onIdle=function(){this.update()};t.prototype.getCurrentDirection=function(){return this.parameters.live.centerMovementVector.direction};t.prototype.getCurrentPointerEvent=function(){return this.currentPointerEvent};return t}();var b=function(t){__extends(e,t);function e(e,n){var i=t.call(this,e,n)||this;i.initialPointerEvent_1=null;i.initialPointerEvent_2=null;i.validPointerManagerState=r.DualPointer;i.validPointerInputConstructor=y;var o=i.getEmptyGestureParameters();i.initialParameters=__assign({},o);i.activeStateParameters=JSON.parse(JSON.stringify(__assign({},o)));return i}e.prototype.getEventData=function(t,e){var n=t.parameters.global;var i=t.parameters.live;var r={deltaX:n.centerMovementVector.x,deltaY:n.centerMovementVector.y,distance:n.centerMovementDistance,speedX:n.centerMovementVector.x/n.duration,speedY:n.centerMovementVector.y/n.duration,speed:n.centerMovementVector.vectorLength/n.duration,direction:n.centerMovementVector.direction,scale:n.relativePointerDistanceChange,rotation:n.rotationAngle,center:n.center,srcEvent:t.currentPointerEvent};var o={deltaX:i.centerMovementVector.x,deltaY:i.centerMovementVector.y,distance:i.centerMovementDistance,speedX:i.centerMovementVector.x/n.duration,speedY:i.centerMovementVector.y/n.duration,speed:i.centerMovementVector.vectorLength/n.duration,direction:i.centerMovementVector.direction,scale:i.relativePointerDistanceChange,rotation:i.rotationAngle,center:{x:i.centerMovementVector.startPoint.x,y:i.centerMovementVector.startPoint.y},srcEvent:t.currentPointerEvent};var a={recognizer:this,global:r,live:o,pointerManager:e};return a};return e}(f);var D=function(t){__extends(e,t);function e(e,n){var i=t.call(this,e,n)||this;i.eventBaseName="pinch";i.initialParameters.live.min["centerMovementDistance"]=0;i.initialParameters.live.max["centerMovementDistance"]=50;i.initialParameters.live.min["absolutePointerDistanceChange"]=5;i.initialParameters.live.max["absoluteRotationAngle"]=20;i.initialParameters.live.min["absoluteVectorAngle"]=10;return i}return e}(b);t("Pinch",D);var I=function(t){__extends(e,t);function e(e,n){var i=t.call(this,e,n)||this;i.eventBaseName="rotate";i.initialParameters.live.min["centerMovementDistance"]=0;i.initialParameters.live.max["centerMovementDistance"]=50;i.initialParameters.live.max["absolutePointerDistanceChange"]=50;i.initialParameters.live.min["absoluteRotationAngle"]=5;i.activeStateParameters.live.min["absoluteRotationAngle"]=0;return i}return e}(b);t("Rotate",I);var G=function(t){__extends(e,t);function e(e,n){var i=t.call(this,e,n)||this;i.eventBaseName="twofingerpan";i.initialParameters.live.min["centerMovementDistance"]=10;i.initialParameters.live.max["absolutePointerDistanceChange"]=50;i.initialParameters.live.max["absoluteVectorAngle"]=150;i.activeStateParameters.live.min["centerMovementDistance"]=0;return i}return e}(b);t("TwoFingerPan",G);var M=function(){function t(t){t=t||{};this.options=__assign({DEBUG:false},t);this.DEBUG=this.options.DEBUG;this.state=r.NoPointer;this.activePointerInput=null;this.lastRemovedPointer=null;this.lastInputSessionPointerCount=0;this.pointerAllocation={};this.unusedPointers={};this.onSurfacePointers={}}t.prototype.addPointer=function(t){if(this.DEBUG==true)console.log("[PointerManager] adding Pointer #".concat(t.pointerId.toString()));var e={DEBUG:this.DEBUG};var n=new u(t,e);this.onSurfacePointers[n.pointerId]=n;if(this.activePointerInput==null)this.setActiveSinglePointerInput(n);else if(this.activePointerInput instanceof v)this.setActiveDualPointerInput(this.activePointerInput.pointer,n);else if(this.activePointerInput instanceof y)this.unusedPointers[n.pointerId]=n;this.lastInputSessionPointerCount=this.currentPointerCount()};t.prototype.removePointer=function(t){if(this.DEBUG==true){console.log("[PointerManager] starting to remove Pointer #".concat(t));console.log("[PointerManager] state: ".concat(this.state))}var e=this.onSurfacePointers[t];this.lastRemovedPointer=e;delete this.onSurfacePointers[t];if(t in this.unusedPointers)delete this.unusedPointers[t];if(this.activePointerInput instanceof y){if(this.activePointerInput.pointerIds.has(t)){if(this.DEBUG==true)console.log("[PointerManager] removing Pointer #".concat(t," from DualPointerInput"));var n=this.activePointerInput.removePointer(t);this.activePointerInput=null;var i=this.getUnusedPointer();if(i instanceof u)this.setActiveDualPointerInput(n,i);else this.setActiveSinglePointerInput(n)}}else if(this.activePointerInput instanceof v){if(this.DEBUG==true)console.log("[PointerManager] removing Pointer #".concat(t," from SinglePointerInput"));this.activePointerInput=null;this.state=r.NoPointer;if(Object.keys(this.unusedPointers).length>0){this.unusedPointers={};throw new Error("[PointerManager] found unused Pointers although there should not be any")}if(Object.keys(this.onSurfacePointers).length>0){this.onSurfacePointers={};throw new Error("[PointerManager] found onSurfacePointers although there should not be any")}}if(this.DEBUG==true)console.log("[PointerManager] state: ".concat(this.state))};t.prototype.setActiveSinglePointerInput=function(t){t.reset();var e=new v(t);this.activePointerInput=e;this.pointerAllocation[t.pointerId]=e;delete this.unusedPointers[t.pointerId];this.state=r.SinglePointer;if(this.DEBUG==true)console.log("[PointerManager] state: ".concat(this.state))};t.prototype.setActiveDualPointerInput=function(t,e){t.reset();e.reset();var n=new y(t,e);this.activePointerInput=n;this.pointerAllocation[t.pointerId]=n;this.pointerAllocation[e.pointerId]=n;delete this.unusedPointers[t.pointerId];delete this.unusedPointers[e.pointerId];this.state=r.DualPointer;if(this.DEBUG==true)console.log("[PointerManager] state: ".concat(this.state))};t.prototype.hasPointersOnSurface=function(){if(Object.keys(this.onSurfacePointers).length>0)return true;return false};t.prototype.currentPointerCount=function(){return Object.keys(this.onSurfacePointers).length};t.prototype.getUnusedPointer=function(){if(Object.keys(this.unusedPointers).length>0){var t=Object.values(this.unusedPointers)[0];return t}return null};t.prototype.getPointerFromId=function(t){if(t in this.onSurfacePointers)return this.onSurfacePointers[t];return null};t.prototype.getlastRemovedPointerInput=function(){if(this.lastRemovedPointer instanceof u)return this.pointerAllocation[this.lastRemovedPointer.pointerId];return null};t.prototype.onIdle=function(){var t;for(var e in this.onSurfacePointers){var n=this.onSurfacePointers[e];n.onIdle()}(t=this.activePointerInput)===null||t===void 0?void 0:t.onIdle()};t.prototype.onPointerMove=function(t){var e;var n=this.getPointerFromId(t.pointerId);if(n instanceof u)n.onPointerMove(t);(e=this.activePointerInput)===null||e===void 0?void 0:e.onPointerMove(t)};t.prototype.onPointerUp=function(t){var e;if(this.DEBUG==true)console.log("[PointerManager] pointerup detected");var n=this.getPointerFromId(t.pointerId);if(n instanceof u)n.onPointerUp(t);(e=this.activePointerInput)===null||e===void 0?void 0:e.onPointerUp(t);this.removePointer(t.pointerId)};t.prototype.onPointerCancel=function(t){var e;if(this.DEBUG==true)console.log("[PointerManager] pointercancel detected");var n=this.getPointerFromId(t.pointerId);if(n instanceof u)n.onPointerCancel(t);(e=this.activePointerInput)===null||e===void 0?void 0:e.onPointerCancel(t);this.removePointer(t.pointerId)};return t}();var S=[m,P,E,D,I,G];var B=function(){function t(t,e){var n=this;var i;this.state=o.NoActiveGesture;this.activeGestures=[];this.hadActiveGestureDuringCurrentContact=false;this.gestureEventHandlers={};this.lastRecognitionTimestamp=null;this.idleRecognitionIntervalId=null;this.pointerEventHandlers={};this.touchEventHandlers={};e=e||{};this.options=__assign({DEBUG:false,DEBUG_GESTURES:false,DEBUG_POINTERMANAGER:false,bubbles:true,handleTouchEvents:true,consecutiveGestures:true,simultaneousGestures:true,supportedGestures:[]},e);this.DEBUG=this.options.DEBUG;var r=(i=e.supportedGestures)!==null&&i!==void 0?i:S;var a=r.map((function(e){if(typeof e==="function"){var i={bubbles:n.options.bubbles,DEBUG:n.options.DEBUG_GESTURES};return new e(t,i)}if(typeof e==="object")return e;throw new Error("unsupported gesture type: ".concat(typeof e))}));this.supportedGestures=a;this.domElement=t;var s={DEBUG:this.options.DEBUG_POINTERMANAGER};this.pointerManager=new M(s);this.addPointerEventListeners();this.addTouchEventListeners()}t.prototype.addPointerEventListeners=function(){var t=this.domElement;var e=this.onPointerDown.bind(this);var n=this.onPointerMove.bind(this);var i=this.onPointerUp.bind(this);var r=this.onPointerCancel.bind(this);t.addEventListener("pointerdown",e,{passive:true});t.addEventListener("pointermove",n,{passive:true});t.addEventListener("pointerup",i,{passive:true});t.addEventListener("pointercancel",r,{passive:true});this.pointerEventHandlers={pointerdown:e,pointermove:n,pointerup:i,pointercancel:r}};t.prototype.onPointerDown=function(t){var e=this;var n,i;if(this.DEBUG==true)console.log("[PointerListener] pointerdown event detected");(t.target||this.domElement).setPointerCapture(t.pointerId);this.pointerManager.addPointer(t);(i=(n=this.options).pointerdown)===null||i===void 0?void 0:i.call(n,t,this);if(this.idleRecognitionIntervalId!=null)this.clearIdleRecognitionInterval();this.idleRecognitionIntervalId=setInterval((function(){e.onIdle()}),100)};t.prototype.onPointerMove=function(t){var e,n;if(this.pointerManager.hasPointersOnSurface()==true){this.pointerManager.onPointerMove(t);this.recognizeGestures();(n=(e=this.options).pointermove)===null||n===void 0?void 0:n.call(e,t,this)}};t.prototype.onPointerUp=function(t){var e,n;if(this.DEBUG==true)console.log("[PointerListener] pointerup event detected");this.domElement.releasePointerCapture(t.pointerId);if(this.pointerManager.hasPointersOnSurface()==true){this.pointerManager.onPointerUp(t);this.recognizeGestures();(n=(e=this.options).pointerup)===null||n===void 0?void 0:n.call(e,t,this)}this.clearIdleRecognitionInterval()};t.prototype.onPointerCancel=function(t){var e,n;this.domElement.releasePointerCapture(t.pointerId);if(this.DEBUG==true)console.log("[PointerListener] pointercancel detected");this.pointerManager.onPointerCancel(t);this.recognizeGestures();this.clearIdleRecognitionInterval();(n=(e=this.options).pointercancel)===null||n===void 0?void 0:n.call(e,t,this)};t.prototype.removePointerEventListeners=function(){for(var t in this.pointerEventHandlers){var e=this.pointerEventHandlers[t];this.domElement.removeEventListener(t,e)}};t.prototype.addTouchEventListeners=function(){if(this.options.handleTouchEvents==true){var t=this.onTouchMove.bind(this);this.domElement.addEventListener("touchmove",t);this.touchEventHandlers["touchmove"]=t}};t.prototype.removeTouchEventListeners=function(){for(var t in this.touchEventHandlers){var e=this.touchEventHandlers[t];this.domElement.removeEventListener(t,e)}};t.prototype.onTouchMove=function(t){for(var e=0;e<this.supportedGestures.length;e++){var n=this.supportedGestures[e];n.onTouchMove(t)}};t.prototype.onIdle=function(){if(this.pointerManager.hasPointersOnSurface()==false)this.clearIdleRecognitionInterval();else{var t=(new Date).getTime();var e=null;if(this.lastRecognitionTimestamp!=null)e=t-this.lastRecognitionTimestamp;if(e==null||e>100){this.pointerManager.onIdle();if(this.DEBUG==true)console.log("[PointerListener] onIdle - running idle recognition");this.recognizeGestures()}}};t.prototype.clearIdleRecognitionInterval=function(){if(this.idleRecognitionIntervalId!=null){clearInterval(this.idleRecognitionIntervalId);this.idleRecognitionIntervalId=null}};t.prototype.recognizeGestures=function(){this.lastRecognitionTimestamp=(new Date).getTime();var t=this.supportedGestures;if(this.options.simultaneousGestures==false&&this.state==o.ActiveGesture)t=[this.activeGestures[0]];else if(this.options.consecutiveGestures==false&&this.state==o.ActiveGesture)t=[this.activeGestures[0]];else if(this.options.consecutiveGestures==false&&this.state==o.NoActiveGesture){if(this.hadActiveGestureDuringCurrentContact==true&&this.pointerManager.hasPointersOnSurface()==true)t=[]}for(var e=0;e<t.length;e++){var n=t[e];n.recognize(this.pointerManager);this.updateActiveGestures(n);if(this.options.simultaneousGestures==false&&this.state==o.ActiveGesture)break}if(this.DEBUG==true)console.log("[PointerListener] hadActiveGestureDuringCurrentContact: ".concat(this.hadActiveGestureDuringCurrentContact));if(this.pointerManager.hasPointersOnSurface()==false)this.hadActiveGestureDuringCurrentContact=false};t.prototype.updateActiveGestures=function(t){if(t.state==i.Active){this.hadActiveGestureDuringCurrentContact=true;if(this.activeGestures.indexOf(t)<0)this.activeGestures.push(t)}else{var e=this.activeGestures.indexOf(t);if(e>=0)this.activeGestures.splice(e,1)}if(this.activeGestures.length>0)this.state=o.ActiveGesture;else this.state=o.NoActiveGesture};t.prototype.parseEventsString=function(t){return t.trim().split(/\s+/g)};t.prototype.on=function(t,e){var n=this.parseEventsString(t);for(var i=0;i<n.length;i++){var r=n[i];if(!(r in this.gestureEventHandlers))this.gestureEventHandlers[r]=[];if(this.gestureEventHandlers[r].indexOf(e)==-1)this.gestureEventHandlers[r].push(e);this.domElement.addEventListener(r,e,{capture:false,passive:true})}};t.prototype.off=function(t,e){var n=this.parseEventsString(t);if(this.DEBUG==true){console.log("[PointerListener] turning off events: ".concat(t));console.log(this.gestureEventHandlers)}for(var i=0;i<n.length;i++){var r=n[i];if(r in this.gestureEventHandlers){var o=this.gestureEventHandlers[r];var a=o.indexOf(e);if(this.DEBUG==true)console.log("[PointerListener] turning off ".concat(r,". Index on handlerList: ").concat(a));if(a>=0){o.splice(a,1);this.gestureEventHandlers[r]=o}this.domElement.removeEventListener(r,e,false)}}};t.prototype.destroy=function(){for(var t in this.gestureEventHandlers){var e=this.gestureEventHandlers[t];for(var n=0;n<e.length;n++){var i=e[n];this.domElement.removeEventListener(t,i)}delete this.gestureEventHandlers[t]}this.removePointerEventListeners();this.removeTouchEventListeners()};return t}();t("PointerListener",B)}}}));