import { ComponentInterface, EventEmitter } from '../../../../stencil-public-runtime';
import { Loggable, LogInstance } from '../../../../utils/log';
import { BalElementStateInfo, BalElementStateObserver } from '../../../../utils/element-states';
export declare class BalRadioButton implements ComponentInterface, Loggable, BalElementStateObserver {
  el: HTMLElement;
  private keyboardMode;
  log: LogInstance;
  createLogger(log: LogInstance): void;
  interactionState: BalElementStateInfo;
  checked: boolean;
  focused: boolean;
  invalid?: boolean;
  invalidHandler(): void;
  disabled?: boolean;
  disabledHandler(): void;
  readonly?: boolean;
  readonlyHandler(): void;
  color?: BalProps.BalRadioButtonColor;
  colSize: BalProps.BalRadioGroupColumns;
  colSizeTablet: BalProps.BalRadioGroupColumns;
  colSizeMobile: BalProps.BalRadioGroupColumns;
  balFocus: EventEmitter<BalEvents.BalRadioButtonFocusDetail>;
  balBlur: EventEmitter<BalEvents.BalRadioButtonBlurDetail>;
  balFormControlDidLoad: EventEmitter<BalEvents.BalRadioButtonAriaLabelledByDetail>;
  connectedCallback(): void;
  componentWillLoad(): void;
  componentDidLoad(): void;
  disconnectedCallback(): void;
  elementStateListener(info: BalElementStateInfo): void;
  setChecked(checked?: boolean): Promise<void>;
  private get interactionChildElements();
  private triggerAllHandlers;
  private updateProps;
  private notifyComponents;
  private onClick;
  private onFocus;
  private onBlur;
  private onPointerDown;
  private onKeydown;
  render(): any;
}
